{"version":3,"sources":["pages/footer.js","pages/HomePage.js","pages/Blog.js","pages/ProductInfo.js","App.js","serviceWorker.js","index.js"],"names":["Footer","props","react_default","a","createElement","Card","CardBody","Fragment","className","href","HomePage","src","class","footer","Component","Blog","width","height","ProductInfo","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","collapsed","toggleNavbar","bind","assertThisInitialized","setState","HashRouter","Navbar","color","light","NavbarBrand","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","NavLink","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eeaa160d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card, CardBody} from 'reactstrap';\r\n\r\nconst Footer = (props) => {\r\n  return (\r\n    <div>\r\n      <Card>\r\n \r\n        <CardBody>\r\n          <>\r\n            <div className=\"ui segment\">\r\n            <div className=\"ui two column very relaxed grid\">\r\n                <div className=\"column\">\r\n                <p>Home</p>\r\n                <p>Blog</p>\r\n                <p>Contact Information</p>\r\n                </div>\r\n                <div className=\"column\">\r\n                <p>Contact Us</p>\r\n                <p>Donations</p>\r\n                </div>\r\n            </div>\r\n            </div>\r\n               <div className=\"FooterButton\"> \r\n                <a href=\"#\" className=\"fa fa-facebook\"></a>\r\n                <a href=\"#\" className=\"fa fa-twitter\"></a>\r\n                <a href=\"#\" className=\"fa fa-youtube\"></a>\r\n                <a href=\"#\" className=\"fa fa-instagram\"></a>\r\n            </div>\r\n            <div className=\"copyright\">\r\n            <h6>180 Micheal Drive | Syosset, NY 11791 | 800-888-8888 | wearedroneearth@gmail.com</h6>\r\n            <h6>All site content copyright © 2020 Drone Earth | Drone Earth. All rights reserved.</h6>\r\n            </div>\r\n          </>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;","import React, { Component } from 'react';\nimport Footer from './footer.js';\n\n\nclass HomePage extends Component {\n  render() {\n    return (\n     <> \n      <div className=\"parallax\"></div>\n      <div className=\"ABOUTUSCONT\">\n        <div className=\"AboutUs\"><p>  About Us</p></div>\n      <div className=\"AboutUsheader\">\n       <div className=\"paragraph\">\n        <div className=\"ui segment\">\n          <div className=\"ui two column very relaxed grid\">\n            <div className=\"column paragraph\">\n              <p>The world generates at least 3.5 million tons of plastic and other solid waste a day. That’s approximately 42 million tons of waste per year. At Drone Earth, we aim to drastically reduce that number all the way down to zero using the power of drones. Using drones, we plan to collect garbage that is being littered all over the Earth. The drones are fully automatic and are lightweight. Most of the garbage that is collected by the drones is recycled or composted. The garbage that can’t be recycled or composted will be outsourced to responsible waste management companies. Drones are also more energy efficient than standard garbage disposal trucks and these drones could potentially replace them. And this is exactly what we plan to do. In the future, we plan to use these waste-collecting drones to completely replace garbage disposal trucks for good.  </p>\n            </div>\n            <div className=\"column paragraph\">\n            <img src=\"https://i.imgur.com/cDeUpgs.jpg\" className=\"ui large image, large\" />\n            </div>\n          </div>\n        </div>    \n      </div>\n      </div>\n      </div>\n      <div class=\"twoparallax\"></div>\n    <div className=\"MeettheTeam\">\n    <div className=\"AboutUs\"><p>Meet the Team</p></div>\n    \n          <div className=\"ui segment\">\n        <div className=\"ui two column very relaxed grid\">\n          <div className=\"column team\">\n            <ul className=\"list\">\n            <li>Cyril Mathew</li>\n            <li>Bram Cheevings</li>\n            <li>Syed Ali</li>\n            <li>Alvin Paul</li>\n            </ul>\n          </div>\n          <div className=\"column team\">\n            <p>An energetic individual who is passionate about making sure that his voice is heard by the masses. He is our head of Public Relations.</p>\n            <p>A talented young man who has a talent for making, anything, even trash, look good. He is our Graphic designer.</p>\n            <p>The visionary high-schooler who was the driving force behind making our dream a reality. He is our Lead Programmer.</p>\n            <p>A charismatic young man who was crucial in turning DroneEarth from a Dream into a reality. He is the Assistant Programmer.</p>\n          </div>\n        </div>\n      </div>\n    </div>\n      <Footer/>\n    </>\n\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\nimport './Blog.css';\nimport Footer from './footer.js'; \nimport {\n  Jumbotron\n} from 'reactstrap';\n\nclass Blog extends Component {\n  render() {\n    return (\n<>\n<div className=\"blogheader\">\n  <h2>Drone Earth Blog</h2>\n</div>\n\n<div className=\"row\">\n  <div className=\"leftcolumn\">\n    <div className=\"card\">\n      <h2>Prototypes of Drone Model!</h2>\n      <h5>Jan 26, 2020</h5>\n      <div className=\"fakeimg dundo\"><img src=\"https://i.imgur.com/g88Ca29.jpg\" width=\"128\" height=\"128\"/>\n      </div>\n      <p>Drones &copy; Syed Ali</p>\n      <p>We are starting to prototype our drones. Testing will finish tommorrow.</p>\n    </div>\n    <div className=\"card\">\n      <h2>Max code!</h2>\n      <h5>Jan 26, 2020</h5>\n      <div className=\"fakeimg dundo\"><img src=\"https://i.imgur.com/SN0iDux.jpg\" width=\"128\" height=\"128\"/></div>\n      <p>Max coding!!!</p>\n    </div>\n  </div>\n  <div className=\"rightcolumn\">\n    <div className=\"card\">\n      <h2>About Us</h2>\n      <div className=\"fakeimg hundo\"><img src=\"https://i.imgur.com/108fSvG.jpg\" width=\"128\" height=\"128\"/></div>\n      <p>The entire team together in unity.</p>\n    </div>\n    <div className=\"card\">\n      <h3>Popular Post</h3>\n      <div className=\"fakeimg\">Image</div>\n      <div className=\"fakeimg\">Image</div>\n      <div className=\"fakeimg\">Image</div>\n    </div>\n  </div>\n</div>\n        <Footer/>\n        </>\n    );\n  }\n}\n\nexport default Blog;\n","import React, { Component } from 'react';\nimport './ProductInfo.css';\nimport Footer from './footer.js'; \n\nclass ProductInfo extends Component {\n  render() {\n    return (\n<>\n\n        <Footer/>\n        </>\n    );\n  }\n}\n\nexport default ProductInfo;\n","import React, { Component } from 'react';\n\nimport './App.css';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nimport {\n  Collapse,\n  Nav,\n  Navbar,\n  NavbarBrand,\n  NavItem,\n  NavLink,\n  NavbarToggler,\n} from 'reactstrap';\n\nimport HomePage from './pages/HomePage';\nimport Blog from './pages/Blog';\nimport ProductInfo from './pages/ProductInfo';\n\nclass App extends Component {\n  constructor (props){\n    super(props)\n    this.state= {collapsed:true}\n    this.toggleNavbar=this.toggleNavbar.bind(this)\n  }\n  toggleNavbar(){\n    let{collapsed}=this.state\n    if (collapsed===true){collapsed=false}\n    else collapsed=true\n    this.setState({collapsed})\n  }\n  render() {\n    const{collapsed}=this.state\n    \n    return (\n      <Router>\n        <div className=\"App\">\n          <Navbar color=\"light\" light className=\"navbar\">\n            <NavbarBrand href=\"#/\" className='header'>Drone Green</NavbarBrand>\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\n           <Collapse isOpen={!collapsed} navbar>\n            <Nav>\n              <NavItem>\n                <NavLink href=\"#/Blog\" className='header'>Blog</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"#/ProductInfo\" className='header'>Product Information</NavLink>\n              </NavItem>\n            </Nav>\n            </Collapse>\n          </Navbar>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/Blog\" component={Blog} />\n          <Route path=\"/ProductInfo\" component={ProductInfo} />\n        <div>\n        {/*FOOTER FOOTER*/}  \n        </div>  \n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// import the bootstrap look and feel\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}